        -:    0:Source:alumni_class.cpp
        -:    0:Graph:menus.gcno
        -:    0:Data:menus.gcda
        -:    0:Runs:1
        -:    1:/************************************************************************
        -:    2:*** FILENAME    : Alumni_class.cpp
        -:    3:*
        -:    4:* * DESCRIPTION : This file defines the function that would be used by the 
        -:    5:*                 Alumni to Register and login to the Alumni portal and after 
        -:    6:*                 login alumni will get access to the Dashboard.   
        -:    7:*
        -:    8:* Revision History:
        -:    9:*
        -:   10:*      Date                            NAME                       Reason
        -:   11:*       
        -:   12:*    27th Sep 2022                   Riya Malik                -----------   
        -:   13:*
        -:   14:* *************************************************************************/
        -:   15:
        -:   16:#include <mutex>
        -:   17:#include<iostream>
        -:   18:#include<fstream>
        -:   19:#include<iomanip>
        -:   20:#include<stdlib.h>
        -:   21:#include"alumni_class.hpp"
        -:   22:#include<algorithm>
        -:   23://#include "validation.cpp"
        -:   24:#include<map>
        -:   25:#include <limits>
        -:   26:mutex accum;
        -:   27:using namespace std;
        -:   28:map<string,string>post;
        -:   29:
        -:   30:validations val;
        -:   31:
        -:   32:/**********************************************************************
        -:   33:  Function Name: alumni_get_data
        -:   34:
        -:   35:Description : This function is used to get alumni details like Alumni
        -:   36:Personal and Professional Details. 
        -:   37:
        -:   38:Returns :
        -:   39:
        -:   40: **********************************************************************/
        -:   41:
        -:   42:
        -:   43:
function _ZN6Alumni15alumni_get_dataEv called 1 returned 100% blocks executed 62%
        1:   44:int Alumni::alumni_get_data()
        -:   45:{
        1:   46:	cout<<endl<<"......Enter Alumni Details......"<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        -:   47:	while(1)
        -:   48:	{
        1:   49:		cout<<"Enter registration  number    : ";
call    0 returned 1
        -:   50:	//	cin.ignore();
        1:   51:		cin>>register_number;
call    0 returned 1
        1:   52:		if(!alm.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   53:		{
    #####:   54:			for(auto it = alm.begin();it!=alm.end();it++)
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:   55:			{
    #####:   56:				if(register_number == it->register_number)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   57:				{
    #####:   58:					cout<<endl<<"This registeration number already exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   59:					return 1;
        -:   60:
        -:   61:				}
        -:   62:			}
        -:   63:		}
        1:   64:		if(val.check_alumni_register_number(register_number)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   65:		{
        1:   66:			break;
        -:   67:		}
        -:   68:
    #####:   69:	}
        -:   70:	while(1)
        -:   71:	{
       1*:   72:		cout<<endl<<"Enter Full Name              : "; 
call    0 returned 1
call    1 returned 1
        1:   73:		cin.ignore();
call    0 returned 1
        1:   74:		getline(cin>>ws,name);
call    0 returned 1
call    1 returned 1
        1:   75:		cin.clear();
call    0 returned 1
        1:   76:		if(val.check_string(name)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   77:		{
        1:   78:			if(name.length()>=3)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:   79:			{
        1:   80:				if(val.check_length(name,len)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   81:				{
        1:   82:					break;
        -:   83:				}
        -:   84:			}
        -:   85:			else
        -:   86:			{
    #####:   87:				cout<<endl<<"The length of name is too small"<<endl;
call    0 never executed
call    1 never executed
call    2 never executed
        -:   88:			}
        -:   89:		}
        -:   90:	}
        -:   91:	while(1)
        -:   92:	{
        -:   93:
       1*:   94:		cout<<endl<<"Enter telephone number       : "; 
call    0 returned 1
call    1 returned 1
        1:   95:		getline(cin,tel_no);
call    0 returned 1
        1:   96:		cin.clear();
call    0 returned 1
        1:   97:		if(val.check_number(tel_no)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   98:		{
        1:   99:			if(val.check_length(tel_no,size)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  100:			{
        1:  101:				break;
        -:  102:			}
        -:  103:
        -:  104:		}
        -:  105:	}
        -:  106:	while(1)
        -:  107:	{
       1*:  108:		cout<<endl<<"Enter email id                : ";
call    0 returned 1
call    1 returned 1
        1:  109:		getline(cin,email_id);
call    0 returned 1
        1:  110:		cin.clear();
call    0 returned 1
        1:  111:		if(val.Email_check(email_id))
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  112:		{
        -:  113:
        1:  114:			break;
        -:  115:		}
    #####:  116:		cout<<endl<<"Invalid Email Id!"<<endl;
call    0 never executed
call    1 never executed
call    2 never executed
        -:  117:	}
        -:  118:	while(1)
        -:  119:	{
       1*:  120:		cout<<endl<<"Enter current address        : ";
call    0 returned 1
call    1 returned 1
        1:  121:		getline(cin>>ws,present_address);
call    0 returned 1
call    1 returned 1
        1:  122:		cin.clear();
call    0 returned 1
       1*:  123:		if(present_address.length()<5)
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  124:		{
    #####:  125:			cout<<"The length of current address is too small!"<<endl;
call    0 never executed
call    1 never executed
    #####:  126:			continue;
        -:  127:		}
        1:  128:		break;
        -:  129:	}
        -:  130:	while(1)
        -:  131:	{
       1*:  132:		cout<<endl<<"Enter department             : ";
call    0 returned 1
call    1 returned 1
        1:  133:		getline(cin,department);
call    0 returned 1
        1:  134:		cin.clear();
call    0 returned 1
        1:  135:		if(val.check_department(department)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  136:		{
        1:  137:			break;
        -:  138:		}
        -:  139:	}
        1:  140:	cout<<endl;
call    0 returned 1
        1:  141:	cout<<endl<<endl<<"......Enter professional Details......"<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        -:  142:	while(1)
        -:  143:	{
       1*:  144:		cout<<endl<<"Enter company name           : ";
call    0 returned 1
call    1 returned 1
        1:  145:		getline(cin,company);
call    0 returned 1
        1:  146:		cin.clear();
call    0 returned 1
        1:  147:		if(company.length()>2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  148:		{
        -:  149:
        1:  150:			if(val.check_string(company)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  151:			{
        1:  152:				break;
        -:  153:			}
        -:  154:		}
        -:  155:		else
        -:  156:		{
    #####:  157:			cout<<"The length of Company name is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  158:		}
        -:  159:
        -:  160:	}
        -:  161:	while(1)
        -:  162:	{
       1*:  163:		cout<<endl<<"Enter designation            : ";
call    0 returned 1
call    1 returned 1
        1:  164:		getline(cin,designation);
call    0 returned 1
        1:  165:		cin.clear();
call    0 returned 1
        1:  166:		if(designation.length()>2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  167:		{
        1:  168:			if(val.check_string(designation)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  169:			{
        1:  170:				break;
        -:  171:			}
        -:  172:		}
        -:  173:		else
        -:  174:		{
    #####:  175:			cout<<"The length of the designation is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  176:		}
        -:  177:	}
        -:  178:	while(1)
        -:  179:	{
       1*:  180:		cout<<endl<<"Enter technology             : ";
call    0 returned 1
call    1 returned 1
        1:  181:		getline(cin,technology);
call    0 returned 1
        1:  182:		cin.clear();
call    0 returned 1
        1:  183:		if(technology.length()>1)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  184:		{
        1:  185:			if(val.check_string(technology)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  186:			{
        1:  187:				break;
        -:  188:			}
        -:  189:		}
        -:  190:		else
        -:  191:		{
    #####:  192:			cout<<"The length of the technology is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  193:		}
        -:  194:	}
        -:  195:	while(1)
        -:  196:	{
       1*:  197:		cout<<endl<<"Enter location               : "; 
call    0 returned 1
call    1 returned 1
        1:  198:		getline(cin,location);
call    0 returned 1
        1:  199:		cin.clear();
call    0 returned 1
        1:  200:		if(location.length()>2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  201:		{
        -:  202:
        1:  203:			if(val.check_string(location)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  204:			{
        1:  205:				break;
        -:  206:			}
        -:  207:		}
        -:  208:		else
        -:  209:		{
    #####:  210:			cout<<"The length of the location is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  211:		}
        -:  212:	}
        -:  213:	while(1)
        -:  214:	{
       1*:  215:		cout<<endl<<"Enter years of experience    : "; 
call    0 returned 1
call    1 returned 1
        1:  216:		getline(cin,years_of_experience);
call    0 returned 1
        1:  217:		cin.clear();
call    0 returned 1
        1:  218:		if(years_of_experience.length()<2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  219:		{
        -:  220:
        1:  221:			if(val.check_number(years_of_experience)==1) 
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  222:			{
        1:  223:				break;
        -:  224:			}
        -:  225:		}
        -:  226:		else
        -:  227:		{
    #####:  228:			cout<<"The length of years of experience is too big"<<endl;
call    0 never executed
call    1 never executed
        -:  229:		}
        -:  230:	}
        -:  231:	while(1)
        -:  232:	{
       1*:  233:		cout<<endl<<"Enter salary                  : "; 
call    0 returned 1
call    1 returned 1
        1:  234:		getline(cin,salary);
call    0 returned 1
        1:  235:		if(salary.length()>2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  236:		{
        1:  237:			if(val.check_number(salary)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
        -:  238:			{
        1:  239:				break;
        -:  240:			}
        -:  241:		}
        -:  242:		else
        -:  243:		{
    #####:  244:			cout<<"The length of the salary is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  245:		}
        -:  246:	}
        1:  247:	return 0;
        -:  248:}
        -:  249:
        -:  250:/**********************************************************************
        -:  251:  Function Name: view_profile
        -:  252:
        -:  253:Description : This function is used to view the details of alumni.
        -:  254:
        -:  255:Returns :
        -:  256:
        -:  257: **********************************************************************/
        -:  258:
        -:  259:
        -:  260:
function _ZN6Alumni12View_ProfileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 3 returned 100% blocks executed 100%
        3:  261:int Alumni::View_Profile(string reg_num)
        -:  262:{
        6:  263:	for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++)
call    0 returned 3
call    1 returned 6
call    2 returned 6
branch  3 taken 3 (fallthrough)
branch  4 taken 3
call    5 returned 3
        -:  264:	{
        3:  265:		if(it->register_number==reg_num)
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        -:  266:		{
        3:  267:			cout<<endl<<endl<<"......ALUMNI PERSONAL DETAILS......"<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:  268:			cout<<endl<<"Register number    : " <<it->register_number<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  269:			cout<<endl<<"Full Name          : " <<it->name<<endl<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 3
branch 14 taken 3 (fallthrough)
branch 15 taken 0 (throw)
        3:  270:			cout<<endl<<"Telephone number   : " <<it->tel_no<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  271:			cout<<endl<<"Email id           : " <<it->email_id<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  272:			cout<<endl<<"Current address    : " <<it->present_address<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  273:			cout<<endl<<"Department         : " <<it->department<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  274:			cout<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  275:			cout<<endl<<endl<<"......ALUMNI PROFESSIONAL DETAILS......"<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:  276:			cout<<endl<<"Company Name       : "<<it->company<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  277:			cout<<endl<<"Designation        : "<<it->designation<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  278:			cout<<endl<<"Technology         : "<<it->technology<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  279:			cout<<endl<<"Location           : "<<it->location<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  280:			cout<<endl<<"Years of experience: "<<it->years_of_experience<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  281:			cout<<endl<<"Salary             : "<<it->salary<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  282:			cout<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:  283:		}
        -:  284:	}
        3:  285:	return 0;
        -:  286:}
        -:  287:
        -:  288:/**********************************************************************
        -:  289:  Function Name: Alumni_Login
        -:  290:
        -:  291:Description : This function is used for Alumni to login to portal by 
        -:  292:entering valid credentials.
        -:  293:
        -:  294:Returns :
        -:  295:
        -:  296: **********************************************************************/
        -:  297:
        -:  298:
function _ZN6Alumni12Alumni_LoginEv called 1 returned 100% blocks executed 66%
        1:  299:int Alumni :: Alumni_Login()
        -:  300:{
        2:  301:	string reg_num;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  302:	string pass;
call    0 returned 1
call    1 never executed
        1:  303:	int choice4=0;
        1:  304:	cout<<"Enter your registration number "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  305:	cin>>reg_num;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  306:	cout<<"Enter the password"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  307:	cin>>pass;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  308:	if(pass==reg_num)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  309:	{
        2:  310:		for(auto it = alm.begin(); it!=alm.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  311:		{
        1:  312:			if(it->register_number==reg_num)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:  313:			{
        6:  314:				while(choice4!=5)
branch  0 taken 5 (fallthrough)
branch  1 taken 1
        -:  315:				{
        5:  316:					cout<<endl<<endl<<"---------DASHBOARD--------"<<endl<<endl;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 5
branch  7 taken 5 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 5
branch 10 taken 5 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 5
branch 13 taken 5 (fallthrough)
branch 14 taken 0 (throw)
        5:  317:					cout<<"1.View Profile\n2.Create Post or update your post\n3.View Post\n4.Edit Details\n5.Exit."<<endl;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:  318:					cin>>choice4;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        -:  319:					while(1)
        -:  320:					{
        5:  321:						if(cin.fail())
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 5
        -:  322:						{
    #####:  323:							cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  324:							cin.ignore(numeric_limits<streamsize>::max(),'\n');
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  325:							cout<<endl<<"You have entered the wrong input type"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  326:							cout<<"Enter your choice"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  327:							cin>>choice4;
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  328:						}
        5:  329:						if(!cin.fail())
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 5 (fallthrough)
branch  4 taken 0
        -:  330:						{
        5:  331:							break;
        -:  332:						}
        -:  333:					}
        5:  334:					switch(choice4)
branch  0 taken 1
branch  1 taken 1
branch  2 taken 1
branch  3 taken 1
branch  4 taken 1
branch  5 taken 0
        -:  335:					{
        1:  336:						case 1: View_Profile(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  337:							break;
        1:  338:						case 2: Create_Posts(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  339:							break;
        1:  340:						case 3: view_posts(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  341:							break;
        1:  342:						case 4: Edit_Details(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  343:							break;
        1:  344:						case 5: break;
    #####:  345:						default: cout<<"Invalid choice!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  346:					}
        -:  347:
        -:  348:				}
        1:  349:				system("read a");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  350:				system("clear");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  351:			}
        -:  352:		}
        -:  353:	}
        -:  354:	else
        -:  355:	{
    #####:  356:		cout<<"Wrong credentials!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  357:
        -:  358:	}
        2:  359:	return 0;
call    0 returned 1
        -:  360:}
        -:  361:
        -:  362:
        -:  363:/**********************************************************************
        -:  364: Function Name: Alumni_Register
        -:  365:
        -:  366:Description : This function is used for the alumni to register into
        -:  367:the portal by giving personal and professional details..
        -:  368:
        -:  369:Returns :
        -:  370:
        -:  371: **********************************************************************/
        -:  372:
        -:  373:
function _Z15Alumni_Registerv called 1 returned 100% blocks executed 83%
        1:  374:int Alumni_Register()
        -:  375:{
        1:  376:	Alumni al;
call    0 returned 1
call    1 never executed
        -:  377:	//The access to this code section is mutually exclusive.
        1:  378:	if(al.alumni_get_data()==0)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        -:  379:	{
        1:  380:		accum.lock();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  381:		alm.push_back(al);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  382:		accum.unlock();
call    0 returned 1
        -:  383:	}
        2:  384:	return 0;
call    0 returned 1
        -:  385:}
        -:  386:
        -:  387:
        -:  388:
        -:  389:/**********************************************************************
        -:  390: Function Name: Create_Posts
        -:  391:
        -:  392:Description : This function allows the alumni to create and update post regarding
        -:  393:job posts and technical information considering that one alumni have only one post..
        -:  394:
        -:  395:Returns :
        -:  396:
        -:  397: **********************************************************************/
        -:  398:
        -:  399:
        -:  400:
function _ZN6Alumni12Create_PostsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:  401:void Alumni::Create_Posts(string number)
        -:  402:{
        1:  403:	cout<<endl<<".....Job Offers/Techical stuffs....."<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  404:	cout<<endl<<"Create your post in (100 words)"<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  405:	getline(cin>>ws,posts);
call    0 returned 1
call    1 returned 1
        1:  406:	post[number] = posts;
call    0 returned 1
call    1 returned 1
        1:  407:}
        -:  408:
        -:  409:
        -:  410:
        -:  411:/**********************************************************************
        -:  412: Function Name: view_posts
        -:  413:
        -:  414:Description : This function is used to view the posts from alumni 
        -:  415:dashboard.
        -:  416:
        -:  417:Returns :
        -:  418:
        -:  419: **********************************************************************/
        -:  420:
        -:  421:
        -:  422:
function _ZN6Alumni10view_postsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 46%
        2:  423:void Alumni:: view_posts(string number)
        -:  424:{
        -:  425:	try
        -:  426:	{
        2:  427:		if(post.find(number)==post.end())
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 0 (fallthrough)
branch  6 taken 2
    #####:  428:			throw number;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:  429:		else
        -:  430:		{
        2:  431:		cout<<endl<<"-------------Posts from the alumni dashboard--------- "<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  432:		cout<<"          ALUMNI:  "<<number<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  433:		cout<<endl<<post[number] <<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        -:  434:
        -:  435:		}
        -:  436:	}
    =====:  437:	catch(string number)
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
call    9 never executed
        -:  438:	{
    =====:  439:		cout<<"No post from this Alumni exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  440:	}
        -:  441:
        2:  442:}
        -:  443:
        -:  444:
        -:  445:
        -:  446:/**********************************************************************
        -:  447:  Function Name: Edit_Details
        -:  448:
        -:  449:Description : This function is used to edit professinal details of alumni.
        -:  450:
        -:  451:Returns :
        -:  452:
        -:  453: **********************************************************************/
        -:  454:
        -:  455:
        -:  456:
function _ZN6Alumni12Edit_DetailsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 27%
        1:  457:int Alumni::Edit_Details(string reg_num)
        -:  458:{
        -:  459:	try
        -:  460:	{
        1:  461:	if(alm.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  462:	{
    #####:  463:		throw alm.empty();
call    0 never executed
call    1 never executed
call    2 never executed
        -:  464:	}
        -:  465:	else
        -:  466:	{
        1:  467:	int flag =0;
        1:  468:	flag=0;
        2:  469:	for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  470:	{
        1:  471:		if(it->register_number==reg_num)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:  472:		{
        1:  473:			flag=1;
        1:  474:			cout<<endl<<"------------------------------------------------"<<endl<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  475:			cout<<endl<<"                          PREVIOUS DETAILS                    "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  476:			cout<<"Company name: "<<it->company<<endl<<"Technology: "<<it->technology<<endl<<"Location: "<<it->location<<endl<<"Years of Experiance : "<<it->years_of_experience<<endl<<"Salary :"<<it->salary<<endl<<"Designation: "<<it->designation<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
call   27 returned 1
branch 28 taken 1 (fallthrough)
branch 29 taken 0 (throw)
call   30 returned 1
branch 31 taken 1 (fallthrough)
branch 32 taken 0 (throw)
call   33 returned 1
call   34 returned 1
branch 35 taken 1 (fallthrough)
branch 36 taken 0 (throw)
call   37 returned 1
branch 38 taken 1 (fallthrough)
branch 39 taken 0 (throw)
call   40 returned 1
branch 41 taken 1 (fallthrough)
branch 42 taken 0 (throw)
call   43 returned 1
call   44 returned 1
branch 45 taken 1 (fallthrough)
branch 46 taken 0 (throw)
call   47 returned 1
branch 48 taken 1 (fallthrough)
branch 49 taken 0 (throw)
call   50 returned 1
branch 51 taken 1 (fallthrough)
branch 52 taken 0 (throw)
call   53 returned 1
call   54 returned 1
branch 55 taken 1 (fallthrough)
branch 56 taken 0 (throw)
call   57 returned 1
branch 58 taken 1 (fallthrough)
branch 59 taken 0 (throw)
        2:  477:			string choice;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  478:			string option;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  479:			cout<<endl<<"Do you want to continue editing - (Yes/No) "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  480:			cin>>option;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  481:			if(option=="yes")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  482:			{
    #####:  483:				for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:  484:
    #####:  485:				cout<<"Enter yes to edit Company name : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  486:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  487:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  488:				{
        -:  489:
        -:  490:
        -:  491:					while(1)
        -:  492:					{
    #####:  493:						cout<<"Enter Updated Company name: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  494:						getline(cin>>ws,it->company);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  495:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  496:
    #####:  497:						if(val.check_string(it->company)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  498:						{
    #####:  499:							break;
        -:  500:						}
        -:  501:					}
        -:  502:				}
    #####:  503:				cout<<"Enter yes to edit Technology : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  504:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  505:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  506:				{
        -:  507:
        -:  508:					while(1)
        -:  509:					{
    #####:  510:						cout<<"Enter Updated Technology: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  511:						getline(cin>>ws,it->technology);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  512:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  513:						if(val.check_string(it->technology)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  514:						{
    #####:  515:							break;
        -:  516:						}
        -:  517:					}
        -:  518:				}
        -:  519:
    #####:  520:				cout<<"Enter yes to edit Location : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  521:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  522:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  523:				{
        -:  524:
        -:  525:					while(1)
        -:  526:					{
    #####:  527:						cout<<"Enter Updated Location: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  528:						getline(cin>>ws,it->location);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  529:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  530:						if(val.check_string(it->location)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  531:						{
    #####:  532:							break;
        -:  533:						}
        -:  534:					}
        -:  535:				}
        -:  536:
    #####:  537:				cout<<"Enter yes to edit Years of Experience : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  538:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  539:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  540:				{
        -:  541:
        -:  542:					while(1)
        -:  543:					{
    #####:  544:						cout<<"Enter Updated Years of Experience: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  545:						getline(cin>>ws,it->years_of_experience);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  546:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  547:						if(val.check_number(it->years_of_experience)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  548:						{
    #####:  549:							break;
        -:  550:						}
        -:  551:					}
        -:  552:				}
        -:  553:
    #####:  554:				cout<<"Enter yes to edit Salary : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  555:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  556:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  557:				{
        -:  558:
        -:  559:					while(1)
        -:  560:					{
    #####:  561:						cout<<"Enter Updated Salary: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  562:						getline(cin>>ws,it->salary);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  563:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  564:						if(val.check_number(it->salary)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  565:						{
    #####:  566:							break;
        -:  567:						}
        -:  568:					}
        -:  569:				}
        -:  570:
    #####:  571:				cout<<"Enter yes to edit Designation : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  572:				cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  573:				if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  574:				{
        -:  575:
        -:  576:					while(1)
        -:  577:					{
    #####:  578:						cout<<"Enter Updated Designation: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  579:						getline(cin>>ws,it->designation);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  580:						cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  581:						if(val.check_string(it->designation)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  582:						{
    #####:  583:							break;
        -:  584:						}
        -:  585:					}
        -:  586:				}
        -:  587:			}
        -:  588:		}
        -:  589:	}
        1:  590:	if(flag==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  591:	{
    #####:  592:		cout<<endl<<"Register number doesn't exist.";
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  593:	}
        -:  594:	}
        -:  595:	}
    =====:  596:	catch(...)
call    0 never executed
call    1 never executed
call    2 never executed
        -:  597:	{
    =====:  598:		cout<<"No Alumni Exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  599:	}
        1:  600:	return 0;
        -:  601:}
