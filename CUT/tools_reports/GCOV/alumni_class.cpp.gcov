        -:    0:Source:alumni_class.cpp
        -:    0:Graph:menus.gcno
        -:    0:Data:menus.gcda
        -:    0:Runs:1
        -:    1:/************************************************************************
        -:    2:*** FILENAME    : Alumni_class.cpp
        -:    3:*
        -:    4:* * DESCRIPTION : This file defines the function that would be used by the 
        -:    5:*                 Alumni to Register and login to the Alumni portal and after 
        -:    6:*                 login alumni will get access to the Dashboard.   
        -:    7:*
        -:    8:* Revision History:
        -:    9:*
        -:   10:*      Date                            NAME                       Reason
        -:   11:*       
        -:   12:*    27th Sep 2022                   Riya Malik                -----------   
        -:   13:*
        -:   14:* *************************************************************************/
        -:   15:#pragma once
        -:   16:#include <mutex>
        -:   17:#include<iostream>
        -:   18:#include<fstream>
        -:   19:#include<iomanip>
        -:   20:#include<stdlib.h>
        -:   21:#include"alumni_class.hpp"
        -:   22:#include<algorithm>
        -:   23://#include "password.cpp"
        -:   24:#include<map>
        -:   25:#include <limits>
        -:   26:mutex accum;
        -:   27:using namespace std;
        -:   28:map<string,string>post;
        -:   29:
        -:   30:validations val;
        -:   31:
        -:   32:/**********************************************************************
        -:   33:  Function Name: alumni_get_data
        -:   34:
        -:   35:Description : This function is used to get alumni details like Alumni
        -:   36:Personal and Professional Details. 
        -:   37:
        -:   38:Returns :
        -:   39:
        -:   40: **********************************************************************/
        -:   41:
        -:   42:
        -:   43:
function _ZN6Alumni15alumni_get_dataEv called 2 returned 100% blocks executed 71%
        2:   44:int Alumni::alumni_get_data()
        -:   45:{
        2:   46:	cout<<endl<<"......Enter Alumni Details......"<<endl;
call    0 returned 2
call    1 returned 2
call    2 returned 2
        -:   47:	while(1)
        -:   48:	{
        2:   49:		cout<<"Enter registration  number    : ";
call    0 returned 2
        -:   50:		//	cin.ignore();
        2:   51:		cin>>register_number;
call    0 returned 2
        2:   52:		if(!alm.empty())
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1
        -:   53:		{
        -:   54:		 //auto keyword will automatically detects and assigns a data type to the variable.
        2:   55:			for(auto it = alm.begin();it!=alm.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:   56:			{
        1:   57:				if(register_number == it->register_number)
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
        -:   58:				{
    #####:   59:					cout<<endl<<"This registeration number already exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   60:					return 1;
        -:   61:
        -:   62:				}
        -:   63:			}
        -:   64:		}
        2:   65:		if(val.check_alumni_register_number(register_number)==1) //If successfully validated
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   66:		{
        2:   67:			break;
        -:   68:		}
        -:   69:
    #####:   70:	}
        -:   71:	while(1)
        -:   72:	{
       2*:   73:		cout<<endl<<"Enter First  Name              : "; 
call    0 returned 2
call    1 returned 2
        2:   74:		cin.ignore();
call    0 returned 2
        2:   75:		getline(cin>>ws,name);
call    0 returned 2
call    1 returned 2
        2:   76:		cin.clear();
call    0 returned 2
        2:   77:		if(val.check_string(name)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   78:		{
        2:   79:			if(name.length()>=3)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:   80:			{
        2:   81:				if(val.check_length(name,len)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   82:				{
        2:   83:					break;
        -:   84:				}
        -:   85:			}
        -:   86:			else
        -:   87:			{
    #####:   88:				cout<<endl<<"The length of name is too small"<<endl;
call    0 never executed
call    1 never executed
call    2 never executed
        -:   89:			}
        -:   90:		}
        -:   91:	}
        -:   92:	while(1)
        -:   93:	{
        -:   94:
       2*:   95:		cout<<endl<<"Enter telephone number       : "; 
call    0 returned 2
call    1 returned 2
        2:   96:		getline(cin,tel_no);
call    0 returned 2
        2:   97:		cin.clear();
call    0 returned 2
        2:   98:		if(val.check_number(tel_no)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   99:		{
        2:  100:			if(val.check_length(tel_no,size)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  101:			{
        2:  102:				break;
        -:  103:			}
        -:  104:
        -:  105:		}
        -:  106:	}
        -:  107:	while(1)
        -:  108:	{
        3:  109:		cout<<endl<<"Enter email id                : ";
call    0 returned 3
call    1 returned 3
        3:  110:		getline(cin,email_id);
call    0 returned 3
        3:  111:		cin.clear();
call    0 returned 3
        3:  112:		if(val.Email_check(email_id))
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 3
branch  5 taken 2 (fallthrough)
branch  6 taken 1
call    7 never executed
call    8 never executed
        -:  113:		{
        -:  114:
        2:  115:			break;
        -:  116:		}
        1:  117:		cout<<endl<<"Invalid Email Id!"<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        -:  118:	}
        -:  119:	while(1)
        -:  120:	{
        3:  121:		cout<<endl<<"Enter current address        : ";
call    0 returned 3
call    1 returned 3
        3:  122:		getline(cin>>ws,present_address);
call    0 returned 3
call    1 returned 3
        3:  123:		cin.clear();
call    0 returned 3
        3:  124:		if(present_address.length()<5)
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        -:  125:		{
        1:  126:			cout<<"The length of current address is too small!"<<endl;
call    0 returned 1
call    1 returned 1
        1:  127:			continue;
        -:  128:		}
        2:  129:		break;
        -:  130:	}
        -:  131:	while(1)
        -:  132:	{
       2*:  133:		cout<<endl<<"Enter department             : ";
call    0 returned 2
call    1 returned 2
        2:  134:		getline(cin,department);
call    0 returned 2
        2:  135:		cin.clear();
call    0 returned 2
        2:  136:		if(val.check_department(department)==1)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  137:		{
        2:  138:			break;
        -:  139:		}
        -:  140:	}
        2:  141:	cout<<endl;
call    0 returned 2
        2:  142:	cout<<endl<<endl<<"......Enter professional Details......"<<endl;
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
        -:  143:	while(1)
        -:  144:	{
       2*:  145:		cout<<endl<<"Enter company name           : ";
call    0 returned 2
call    1 returned 2
        2:  146:		getline(cin,company);
call    0 returned 2
        2:  147:		cin.clear();
call    0 returned 2
        2:  148:		if(company.length()>2)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  149:		{
        -:  150:
        2:  151:			if(val.check_string(company)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  152:			{
        2:  153:				break;
        -:  154:			}
        -:  155:		}
        -:  156:		else
        -:  157:		{
    #####:  158:			cout<<"The length of Company name is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  159:		}
        -:  160:
        -:  161:	}
        -:  162:	while(1)
        -:  163:	{
       2*:  164:		cout<<endl<<"Enter designation            : ";
call    0 returned 2
call    1 returned 2
        2:  165:		getline(cin,designation);
call    0 returned 2
        2:  166:		cin.clear();
call    0 returned 2
        2:  167:		if(designation.length()>2)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  168:		{
        2:  169:			if(val.check_string(designation)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  170:			{
        2:  171:				break;
        -:  172:			}
        -:  173:		}
        -:  174:		else
        -:  175:		{
    #####:  176:			cout<<"The length of the designation is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  177:		}
        -:  178:	}
        -:  179:	while(1)
        -:  180:	{
        4:  181:		cout<<endl<<"Enter technology             : ";
call    0 returned 4
call    1 returned 4
        4:  182:		getline(cin,technology);
call    0 returned 4
        4:  183:		cin.clear();
call    0 returned 4
        4:  184:		if(technology.length()>1)
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0
        -:  185:		{
        4:  186:			if(val.check_string(technology)==1)
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 4
branch  5 taken 2 (fallthrough)
branch  6 taken 2
call    7 never executed
call    8 never executed
        -:  187:			{
        2:  188:				break;
        -:  189:			}
        -:  190:		}
        -:  191:		else
        -:  192:		{
    #####:  193:			cout<<"The length of the technology is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  194:		}
        -:  195:	}
        -:  196:	while(1)
        -:  197:	{
       2*:  198:		cout<<endl<<"Enter location               : "; 
call    0 returned 2
call    1 returned 2
        2:  199:		getline(cin,location);
call    0 returned 2
        2:  200:		cin.clear();
call    0 returned 2
        2:  201:		if(location.length()>2)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  202:		{
        -:  203:
        2:  204:			if(val.check_string(location)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  205:			{
        2:  206:				break;
        -:  207:			}
        -:  208:		}
        -:  209:		else
        -:  210:		{
    #####:  211:			cout<<"The length of the location is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  212:		}
        -:  213:	}
        -:  214:	while(1)
        -:  215:	{
       2*:  216:		cout<<endl<<"Enter years of experience    : "; 
call    0 returned 2
call    1 returned 2
        2:  217:		getline(cin,years_of_experience);
call    0 returned 2
        2:  218:		cin.clear();
call    0 returned 2
        2:  219:		if(years_of_experience.length()<2)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  220:		{
        -:  221:
        2:  222:			if(val.check_number(years_of_experience)==1) 
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  223:			{
        2:  224:				break;
        -:  225:			}
        -:  226:		}
        -:  227:		else
        -:  228:		{
    #####:  229:			cout<<"Invalid years of experience"<<endl;
call    0 never executed
call    1 never executed
        -:  230:		}
        -:  231:	}
        -:  232:	while(1)
        -:  233:	{
       2*:  234:		cout<<endl<<"Enter salary                  : "; 
call    0 returned 2
call    1 returned 2
        2:  235:		getline(cin,salary);
call    0 returned 2
        2:  236:		if(salary.length()>2)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  237:		{
        2:  238:			if(val.check_number(salary)==1)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
call    7 never executed
        -:  239:			{
        2:  240:				break;
        -:  241:			}
        -:  242:		}
        -:  243:		else
        -:  244:		{
    #####:  245:			cout<<"The length of the salary is too small"<<endl;
call    0 never executed
call    1 never executed
        -:  246:		}
        -:  247:	}
        2:  248:	return 0;
        -:  249:}
        -:  250:
        -:  251:/**********************************************************************
        -:  252:  Function Name: view_profile
        -:  253:
        -:  254:Description : This function is used to view the details of alumni.
        -:  255:
        -:  256:Returns :
        -:  257:
        -:  258: **********************************************************************/
        -:  259:
        -:  260:
        -:  261:
function _ZN6Alumni12View_ProfileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 3 returned 100% blocks executed 100%
        3:  262:int Alumni::View_Profile(string reg_num)
        -:  263:{
        9:  264:	for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++)
call    0 returned 3
call    1 returned 9
call    2 returned 9
branch  3 taken 6 (fallthrough)
branch  4 taken 3
call    5 returned 6
        -:  265:	{
        6:  266:		if(it->register_number==reg_num)
call    0 returned 6
call    1 returned 6
branch  2 taken 3 (fallthrough)
branch  3 taken 3
        -:  267:		{
        3:  268:			cout<<endl<<endl<<"......ALUMNI PERSONAL DETAILS......"<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:  269:			cout<<endl<<"Register number    : " <<it->register_number<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  270:			cout<<endl<<"Full Name          : " <<it->name<<endl<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 3
branch 14 taken 3 (fallthrough)
branch 15 taken 0 (throw)
        3:  271:			cout<<endl<<"Telephone number   : " <<it->tel_no<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  272:			cout<<endl<<"Email id           : " <<it->email_id<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  273:			cout<<endl<<"Current address    : " <<it->present_address<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  274:			cout<<endl<<"Department         : " <<it->department<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  275:			cout<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  276:			cout<<endl<<endl<<"......ALUMNI PROFESSIONAL DETAILS......"<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:  277:			cout<<endl<<"Company Name       : "<<it->company<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  278:			cout<<endl<<"Designation        : "<<it->designation<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  279:			cout<<endl<<"Technology         : "<<it->technology<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  280:			cout<<endl<<"Location           : "<<it->location<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  281:			cout<<endl<<"Years of experience: "<<it->years_of_experience<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  282:			cout<<endl<<"Salary             : "<<it->salary<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:  283:			cout<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:  284:		}
        -:  285:	}
        3:  286:	return 0;
        -:  287:}
        -:  288:
        -:  289:/**********************************************************************
        -:  290:  Function Name: Alumni_Login
        -:  291:
        -:  292:Description : This function is used for Alumni to login to portal by 
        -:  293:entering valid credentials.
        -:  294:
        -:  295:Returns :
        -:  296:
        -:  297: **********************************************************************/
        -:  298:
        -:  299:
function _ZN6Alumni12Alumni_LoginEv called 2 returned 100% blocks executed 66%
        2:  300:int Alumni :: Alumni_Login()
        -:  301:{
        4:  302:	string reg_num;
call    0 returned 2
call    1 returned 2
call    2 never executed
        2:  303:	cout<<"Enter your registration number "<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  304:	cin>>reg_num;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  305:	cout<<"Enter the password"<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  306:	cin.ignore();
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  307:	string password = getpass(); //masking the password
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 never executed
        -:  308:	//cout<<password;
        2:  309:	if(password==reg_num)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        -:  310:	{
        5:  311:		for(auto it = alm.begin(); it!=alm.end();it++)
call    0 returned 2
call    1 returned 5
call    2 returned 5
branch  3 taken 3 (fallthrough)
branch  4 taken 2
call    5 returned 3
        -:  312:		{
        3:  313:			if(it->register_number==reg_num)
call    0 returned 3
call    1 returned 3
branch  2 taken 1 (fallthrough)
branch  3 taken 2
        -:  314:			{
        1:  315:				int choice4=0;
        6:  316:				while(choice4!=5)
branch  0 taken 5 (fallthrough)
branch  1 taken 1
        -:  317:				{
        5:  318:					cout<<endl<<endl<<"---------DASHBOARD--------"<<endl<<endl;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 5
branch  7 taken 5 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 5
branch 10 taken 5 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 5
branch 13 taken 5 (fallthrough)
branch 14 taken 0 (throw)
        5:  319:					cout<<"1.View Profile\n2.Create Post or update your post\n3.View Post\n4.Edit Details\n5.Exit."<<endl;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:  320:					cout<<endl<<"Enter your choice-"<<endl;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 5
branch  7 taken 5 (fallthrough)
branch  8 taken 0 (throw)
        5:  321:					cin>>choice4;
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        -:  322:					while(1)
        -:  323:					{
        5:  324:						if(cin.fail())
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 5
        -:  325:						{
    #####:  326:							cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  327:							cin.ignore(numeric_limits<streamsize>::max(),'\n');
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  328:							cout<<endl<<"You have entered the wrong input type"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  329:							cout<<"Enter your choice"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  330:							cin>>choice4;
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  331:						}
        5:  332:						if(!cin.fail())
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 5 (fallthrough)
branch  4 taken 0
        -:  333:						{
        5:  334:							break;
        -:  335:						}
        -:  336:					}
        5:  337:					switch(choice4)
branch  0 taken 1
branch  1 taken 1
branch  2 taken 1
branch  3 taken 1
branch  4 taken 1
branch  5 taken 0
        -:  338:					{
        1:  339:						case 1: View_Profile(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  340:							break;
        1:  341:						case 2: Create_Posts(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  342:							break;
        1:  343:						case 3: view_posts(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  344:							break;
        1:  345:						case 4: Edit_Details(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  346:							break;
        1:  347:						case 5: break;
    #####:  348:						default: cout<<"Invalid choice!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  349:					}
        -:  350:
        -:  351:				}
        -:  352:	//			system("read a");
        -:  353:	//			system("clear");
        -:  354:			}
        -:  355:		}
        -:  356:	}
        -:  357:	else
        -:  358:	{
    #####:  359:		cout<<"Wrong credentials!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  360:
        -:  361:	}
        4:  362:	return 0;
call    0 returned 2
        -:  363:}
        -:  364:
        -:  365:
        -:  366:/**********************************************************************
        -:  367:  Function Name: Alumni_Register
        -:  368:
        -:  369:Description : This function is used for the alumni to register into
        -:  370:the portal by giving personal and professional details..
        -:  371:
        -:  372:Returns :
        -:  373:
        -:  374: **********************************************************************/
        -:  375:
        -:  376:
function _Z15Alumni_Registerv called 2 returned 100% blocks executed 83%
        2:  377:int Alumni_Register()
        -:  378:{
        2:  379:	Alumni al;
call    0 returned 2
call    1 never executed
        -:  380:	//The access to this code section is mutually exclusive.
        2:  381:	if(al.alumni_get_data()==0)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 2 (fallthrough)
branch  4 taken 0
        -:  382:	{
        2:  383:		accum.lock();
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  384:		alm.push_back(al);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  385:		accum.unlock();
call    0 returned 2
        -:  386:	}
        4:  387:	return 0;
call    0 returned 2
        -:  388:}
        -:  389:
        -:  390:
        -:  391:
        -:  392:/**********************************************************************
        -:  393:  Function Name: Create_Posts
        -:  394:
        -:  395:Description : This function allows the alumni to create and update post regarding
        -:  396:job posts and technical information considering that one alumni have only one post..
        -:  397:
        -:  398:Returns :
        -:  399:
        -:  400: **********************************************************************/
        -:  401:
        -:  402:
        -:  403:
function _ZN6Alumni12Create_PostsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:  404:void Alumni::Create_Posts(string number)
        -:  405:{
        1:  406:	cout<<endl<<".....Job Offers/Techical stuffs....."<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  407:	cout<<endl<<"Create your post in (100 words)"<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  408:	getline(cin>>ws,posts);
call    0 returned 1
call    1 returned 1
        1:  409:	post[number] = posts; //post is a map with key as register number and value as posts.
call    0 returned 1
call    1 returned 1
        1:  410:}
        -:  411:
        -:  412:
        -:  413:
        -:  414:/**********************************************************************
        -:  415:  Function Name: view_posts
        -:  416:
        -:  417:Description : This function is used to view the posts from alumni 
        -:  418:dashboard.
        -:  419:
        -:  420:Returns :
        -:  421:
        -:  422: **********************************************************************/
        -:  423:
        -:  424:
        -:  425:
function _ZN6Alumni10view_postsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 83%
        2:  426:void Alumni:: view_posts(string number)
        -:  427:{
        -:  428:	try
        -:  429:	{
        2:  430:		if(post.find(number)==post.end()) //If register number does not exists.
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
branch  5 taken 1 (fallthrough)
branch  6 taken 1
        1:  431:			throw number;
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
call    5 never executed
        -:  432:		else
        -:  433:		{
        1:  434:			cout<<endl<<"-------------Posts from the alumni dashboard--------- "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  435:			cout<<"          ALUMNI:  "<<number<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  436:			cout<<endl<<post[number] <<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        -:  437:
        -:  438:		}
        -:  439:	}
        2:  440:	catch(string& number)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
call    2 returned 1
call    3 returned 1
call    4 never executed
        -:  441:	{
        1:  442:		cout<<"No post from this Alumni exists!"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:  443:	}
        -:  444:
        2:  445:}
        -:  446:
        -:  447:
        -:  448:
        -:  449:/**********************************************************************
        -:  450:  Function Name: Edit_Details
        -:  451:
        -:  452:Description : This function is used to edit professinal details of alumni.
        -:  453:
        -:  454:Returns :
        -:  455:
        -:  456: **********************************************************************/
        -:  457:
        -:  458:
        -:  459:
function _ZN6Alumni12Edit_DetailsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 27%
        1:  460:int Alumni::Edit_Details(string reg_num)
        -:  461:{
        -:  462:	try
        -:  463:	{
        1:  464:		if(alm.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  465:		{
    #####:  466:			throw alm.empty();
call    0 never executed
call    1 never executed
call    2 never executed
        -:  467:		}
        -:  468:		else
        -:  469:		{
        1:  470:			int flag =0;
        1:  471:			flag=0;
        3:  472:			for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++)
call    0 returned 1
call    1 returned 3
call    2 returned 3
branch  3 taken 2 (fallthrough)
branch  4 taken 1
call    5 returned 2
        -:  473:			{
        2:  474:				if(it->register_number==reg_num)
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        -:  475:				{
        1:  476:					flag=1;
        1:  477:					cout<<endl<<"------------------------------------------------"<<endl<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  478:					cout<<endl<<"                          PREVIOUS DETAILS                    "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  479:					cout<<"Company name: "<<it->company<<endl<<"Technology: "<<it->technology<<endl<<"Location: "<<it->location<<endl<<"Years of Experiance : "<<it->years_of_experience<<endl<<"Salary :"<<it->salary<<endl<<"Designation: "<<it->designation<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
call   27 returned 1
branch 28 taken 1 (fallthrough)
branch 29 taken 0 (throw)
call   30 returned 1
branch 31 taken 1 (fallthrough)
branch 32 taken 0 (throw)
call   33 returned 1
call   34 returned 1
branch 35 taken 1 (fallthrough)
branch 36 taken 0 (throw)
call   37 returned 1
branch 38 taken 1 (fallthrough)
branch 39 taken 0 (throw)
call   40 returned 1
branch 41 taken 1 (fallthrough)
branch 42 taken 0 (throw)
call   43 returned 1
call   44 returned 1
branch 45 taken 1 (fallthrough)
branch 46 taken 0 (throw)
call   47 returned 1
branch 48 taken 1 (fallthrough)
branch 49 taken 0 (throw)
call   50 returned 1
branch 51 taken 1 (fallthrough)
branch 52 taken 0 (throw)
call   53 returned 1
call   54 returned 1
branch 55 taken 1 (fallthrough)
branch 56 taken 0 (throw)
call   57 returned 1
branch 58 taken 1 (fallthrough)
branch 59 taken 0 (throw)
        2:  480:					string choice;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  481:					string option;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  482:					cout<<endl<<"Do you want to continue editing - (Yes/No) "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  483:					cin>>option;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  484:					if(option=="yes")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  485:					{
    #####:  486:						for(list<Alumni>::iterator it=alm.begin();it!=alm.end();it++);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:  487:
    #####:  488:						cout<<"Enter yes to edit Company name : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  489:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  490:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  491:						{
        -:  492:
        -:  493:
        -:  494:							while(1)
        -:  495:							{
    #####:  496:								cout<<"Enter Updated Company name : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  497:								getline(cin>>ws,it->company);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  498:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  499:
    #####:  500:								if(val.check_string(it->company)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  501:								{
    #####:  502:									break;
        -:  503:								}
        -:  504:							}
        -:  505:						}
    #####:  506:						cout<<"Enter yes to edit Technology : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  507:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  508:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  509:						{
        -:  510:
        -:  511:							while(1)
        -:  512:							{
    #####:  513:								cout<<"Enter Updated Technology : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  514:								getline(cin>>ws,it->technology);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  515:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  516:								if(val.check_string(it->technology)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  517:								{
    #####:  518:									break;
        -:  519:								}
        -:  520:							}
        -:  521:						}
        -:  522:
    #####:  523:						cout<<"Enter yes to edit Location : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  524:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  525:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  526:						{
        -:  527:
        -:  528:							while(1)
        -:  529:							{
    #####:  530:								cout<<"Enter Updated Location : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  531:								getline(cin>>ws,it->location);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  532:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  533:								if(val.check_string(it->location)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  534:								{
    #####:  535:									break;
        -:  536:								}
        -:  537:							}
        -:  538:						}
        -:  539:
    #####:  540:						cout<<"Enter yes to edit Years of Experience : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  541:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  542:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  543:						{
        -:  544:
        -:  545:							while(1)
        -:  546:							{
    #####:  547:								cout<<"Enter Updated Years of Experience : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  548:								getline(cin>>ws,it->years_of_experience);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  549:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  550:								if(val.check_number(it->years_of_experience)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  551:								{
    #####:  552:									break;
        -:  553:								}
        -:  554:							}
        -:  555:						}
        -:  556:
    #####:  557:						cout<<"Enter yes to edit Salary : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  558:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  559:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  560:						{
        -:  561:
        -:  562:							while(1)
        -:  563:							{
    #####:  564:								cout<<"Enter Updated Salary : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  565:								getline(cin>>ws,it->salary);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  566:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  567:								if(val.check_number(it->salary)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  568:								{
    #####:  569:									break;
        -:  570:								}
        -:  571:							}
        -:  572:						}
        -:  573:
    #####:  574:						cout<<"Enter yes to edit Designation : "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  575:						cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  576:						if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  577:						{
        -:  578:
        -:  579:							while(1)
        -:  580:							{
    #####:  581:								cout<<"Enter Updated Designation : ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  582:								getline(cin>>ws,it->designation);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  583:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  584:								if(val.check_string(it->designation)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  585:								{
    #####:  586:									break;
        -:  587:								}
        -:  588:							}
        -:  589:						}
        -:  590:					}
        -:  591:				}
        -:  592:			}
        1:  593:			if(flag==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  594:			{
    #####:  595:				cout<<endl<<"Register number doesn't exist.";
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  596:			}
        -:  597:		}
        -:  598:	}
    =====:  599:	catch(...)
call    0 never executed
call    1 never executed
call    2 never executed
        -:  600:	{
    =====:  601:		cout<<"No Alumni Exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  602:	}
        1:  603:	return 0;
        -:  604:}
