        -:    0:Source:student_class.cpp
        -:    0:Graph:menus.gcno
        -:    0:Data:menus.gcda
        -:    0:Runs:1
        -:    1:/************************************************************************
        -:    2: *** FILENAME  : student_class.cpp
        -:    3: *
        -:    4: * * DESCRIPTION : This file defines the function that would be used by the program for the student to Register 
        -:    5: *                and login to the Alumni portal and after login student will get access to the Dashboard.   
        -:    6: *
        -:    7: * Revision History:
        -:    8: *
        -:    9: *      Date                            NAME                       Reason
        -:   10: *       
        -:   11: *    27th Sep 2022                   Riya Malik                -----------   
        -:   12: *
        -:   13: * *************************************************************************/
        -:   14:
        -:   15:#include<mutex>
        -:   16:#include<iostream>
        -:   17:#include<fstream>
        -:   18:#include<iomanip>
        -:   19:#include<stdlib.h>
        -:   20:#include"student_class.hpp"
        -:   21:#include<algorithm>
        -:   22://#include "validation.cpp"
        -:   23:#include<limits>
        -:   24:using namespace std;
        -:   25:validations v1;
        -:   26:mutex accum_mutex;
        -:   27:
        -:   28:
        -:   29:
        -:   30:/*********************************************************
        -:   31: * FUNCTION NAME  : student_get_data
        -:   32: *
        -:   33: * DESCRIPTION   :The student will get Register in the Alumni portal using their Details.
        -:   34: *
        -:   35: * RETURNS        :
        -:   36: *
        -:   37: * *************************************************************/
        -:   38:
        -:   39:
function _ZN7student16student_get_dataEv called 1 returned 100% blocks executed 63%
        1:   40:int student::student_get_data()
        -:   41:{
        1:   42:	cout<<"\n\nEnter Student Details......\n";
call    0 returned 1
        -:   43:	while(1)
        -:   44:	{
        1:   45:		cout<<endl<<"Enter registration  number    : ";
call    0 returned 1
call    1 returned 1
        1:   46:		cin.ignore();
call    0 returned 1
        1:   47:		cin>>student_register_number;
call    0 returned 1
        1:   48:		cin.clear();
call    0 returned 1
        1:   49:		if(!stl.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   50:		{
    #####:   51:			for(auto it = stl.begin();it!=stl.end();it++)
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:   52:			{
    #####:   53:				if(student_register_number == it->student_register_number)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   54:				{
    #####:   55:					cout<<endl<<"This registeration number already exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   56:					return 1;
        -:   57:				}
        -:   58:			}
        -:   59:		}
        1:   60:		if(v1.check_Student_register_number(student_register_number)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   61:		{
        1:   62:			break;
        -:   63:		}
        -:   64:
    #####:   65:	}
        -:   66:	while(1)
        -:   67:	{
       1*:   68:		cout<<endl<<"Enter your first Name         : "; 
call    0 returned 1
call    1 returned 1
        1:   69:		cin.ignore();
call    0 returned 1
        1:   70:		getline(cin,student_name);
call    0 returned 1
        1:   71:		cin.clear();
call    0 returned 1
        1:   72:		if(v1.check_string(student_name)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   73:		{
       1*:   74:			if(v1.check_length(student_name,len)==1 && student_name.length()>2 )
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
branch  6 taken 1 (fallthrough)
branch  7 taken 0
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0
branch 11 taken 1 (fallthrough)
branch 12 taken 0
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
        -:   75:			{
        1:   76:				break;
        -:   77:			}
        -:   78:		}
        -:   79:	}
        -:   80:	while(1)
        -:   81:	{
        -:   82:
       1*:   83:		cout<<endl<<"Enter telephone number      : "; 
call    0 returned 1
call    1 returned 1
        1:   84:		getline(cin,student_tel_no);
call    0 returned 1
        1:   85:		cin.clear();
call    0 returned 1
        1:   86:		if(v1.check_number(student_tel_no)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   87:		{
        1:   88:			if(v1.check_length(student_tel_no,size)==1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   89:			{
        1:   90:				break;
        -:   91:			}
        -:   92:		}
        -:   93:	}
        -:   94:	while(1)
        -:   95:	{
       1*:   96:		cout<<endl<<"Enter email id          : ";
call    0 returned 1
call    1 returned 1
        1:   97:		getline(cin,student_email_id);
call    0 returned 1
        1:   98:		cin.clear();
call    0 returned 1
        1:   99:		if(v1.Email_check(student_email_id))
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
        -:  100:		{
        -:  101:
        1:  102:			break;
        -:  103:		}
    #####:  104:		cout<<endl<<"Invalid Email Id!"<<endl;
call    0 never executed
call    1 never executed
call    2 never executed
        -:  105:	}
        -:  106:
        -:  107:	while(1)
        -:  108:	{
       1*:  109:		cout<<endl<<"Enter department   : ";
call    0 returned 1
call    1 returned 1
        1:  110:		getline(cin,student_department);
call    0 returned 1
        1:  111:		cin.clear();
call    0 returned 1
        1:  112:		if(v1.check_department(student_department)==1)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  113:		{
        1:  114:			break;
        -:  115:		}
        -:  116:	}
        -:  117:	while(1)
        -:  118:	{
       1*:  119:		cout<<endl<<"Are you placed yes/no   : ";
call    0 returned 1
call    1 returned 1
        1:  120:		cin>>placed;
call    0 returned 1
       1*:  121:		if(placed=="yes" ||placed =="no")
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        -:  122:		{
        1:  123:			break;
        -:  124:		}
        -:  125:	}
        1:  126:	return 0;
        -:  127:}
        -:  128:
        -:  129:/*********************************************************
        -:  130: * FUNCTION NAME  : Student_Login 
        -:  131: *
        -:  132: * DESCRIPTION   :The student will  login the Alumni portal using their Credentials like Registration number and  password.
        -:  133: *                and performs various operations by taking the choice from the user.
        -:  134: *
        -:  135: *
        -:  136: * RETURNS        :Edit_Info          -Edit the information of student
        -:  137: *                 View_Alumni_Details-View the Deatils of Alumni
        -:  138: *                 Job_Posts          -view the Job post posted by alumni
        -:  139: *                 ask_for_connect    -student as for connect with alumni
        -:  140: *                 View_Profile       -View the student profile
        -:  141: *
        -:  142: * *************************************************************/
        -:  143:
function _ZN7student13Student_LoginEv called 1 returned 100% blocks executed 65%
        1:  144:int student:: Student_Login()
        -:  145:{
        1:  146:	int choice5=0;
        2:  147:	string reg_num;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  148:	cout<<endl<<"Enter your registration number "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  149:	cin>>reg_num;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  150://	cin.clear();
        1:  151:	cout<<endl<<"Enter the password"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  152:	cin.ignore();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  153:	string password = getpass(); //masking the password	
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 never executed
        1:  154:	if(password==reg_num)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  155:	{
        -:  156:
        2:  157:		for(auto it = stl.begin();it!=stl.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  158:		{
        1:  159:			if(it->student_register_number==reg_num)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:  160:			{
        7:  161:				while(choice5!=6)
branch  0 taken 6 (fallthrough)
branch  1 taken 1
        -:  162:				{
        6:  163:					cout<<endl<<"---------DASHBOARD--------"<<endl;
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:  164:					cout<<endl<<"1.Edit details\n2.View your department alumni details\n3.View posts\n4.Ask for a connect\n5.View Profile\n6.Exit"<<endl;
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:  165:					cout<<endl<<"Enter your choice-"<<endl;
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:  166:					cin>>choice5;
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        -:  167:					while(1)
        -:  168:					{
        6:  169:						if(cin.fail())
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 6
        -:  170:						{
    #####:  171:							cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  172:							cin.ignore(numeric_limits<streamsize>::max(),'\n');
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  173:							cout<<endl<<"You have entered the wrong input type"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  174:							cout<<"Enter your choice"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  175:							cin>>choice5;
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  176:						}
        6:  177:						if(!cin.fail())
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 6 (fallthrough)
branch  4 taken 0
        -:  178:						{
        6:  179:							break;
        -:  180:						}
        -:  181:					}
        6:  182:					switch(choice5)
branch  0 taken 1
branch  1 taken 1
branch  2 taken 1
branch  3 taken 1
branch  4 taken 1
branch  5 taken 1
branch  6 taken 0
        -:  183:					{
        1:  184:						case 1: Edit_Info(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  185:							break;
        1:  186:						case 2:View_Alumni_Details(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  187:						       break;
        1:  188:						case 3:Job_Posts(reg_num); 
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  189:						       break;
        1:  190:						case 4:ask_for_connect(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  191:						       break;
        1:  192:						case 5:view_profile(reg_num);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        1:  193:						       break;
        1:  194:						case 6: break;
    #####:  195:						default: cout<<endl<<"Invalid options!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  196:
        -:  197:					}
        -:  198:
        -:  199:				}
        -:  200:			//	system("read a");
        -:  201:			//	system("clear");
        -:  202:			}
        -:  203:		}
        -:  204:	}
        -:  205:	else
        -:  206:	{
    #####:  207:		cout<<endl<<"Wrong credentials!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  208:
        -:  209:	}
        1:  210:	system("read");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  211:	system("clear");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:  212:	return 0;
call    0 returned 1
        -:  213:}
        -:  214:
        -:  215:
function _Z16Student_Registerv called 1 returned 100% blocks executed 83%
        1:  216:int Student_Register()
        -:  217:{
        1:  218:	student st;
call    0 returned 1
call    1 never executed
        1:  219:	if(st.student_get_data()==0)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        -:  220:	{
        1:  221:		accum_mutex.lock();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  222:
        1:  223:		stl.push_back(st);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  224:		accum_mutex.unlock();
call    0 returned 1
        -:  225:	}
        -:  226:
        2:  227:	return 0;
call    0 returned 1
        -:  228:}
        -:  229:
        -:  230:
        -:  231:
        -:  232:
        -:  233:
        -:  234:/*********************************************************
        -:  235: * FUNCTION NAME  : ask_for_connect
        -:  236: *
        -:  237: * DESCRIPTION   :student will ask for the connect with Alumni in the same department. 
        -:  238: *
        -:  239: *
        -:  240: * RETURNS        :----------
        -:  241: *
        -:  242: *
        -:  243: ****************************************************/
        -:  244:
function _ZN7student15ask_for_connectENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 70%
        1:  245:int student :: ask_for_connect(string reg_no)
        -:  246:{
        2:  247:	string dept;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  248:	string alm_reg;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  249:	for(list<student>::iterator it = stl.begin();it!=stl.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  250:	{
        1:  251:		if(it->student_register_number==reg_no)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:  252:		{
        1:  253:			dept = it->student_department;
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:  254:		}
        -:  255:	}
        -:  256:
        -:  257:	try{
        1:  258:		if(alm.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  259:		{
    #####:  260:			throw alm.empty();
call    0 never executed
call    1 never executed
call    2 never executed
        -:  261:		}
        -:  262:		else
        -:  263:		{
        -:  264:
        1:  265:			int flag=0;
        3:  266:			for(auto iter = alm.begin(); iter!=alm.end();iter++)
call    0 returned 1
call    1 returned 3
call    2 returned 3
branch  3 taken 2 (fallthrough)
branch  4 taken 1
call    5 returned 2
        -:  267:			{
        2:  268:				if(iter->ret_dept_no()==dept)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
call    5 returned 2
branch  6 taken 1 (fallthrough)
branch  7 taken 1
        -:  269:				{
        1:  270:					cout<<"Alumni exists:  "<< iter->ret_reg_no()<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
        -:  271:
        1:  272:					flag=1;
        -:  273:
        -:  274:				}
        -:  275:			}
        1:  276:			if(flag==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  277:			{
    #####:  278:				cout<<endl<<"Cannot connect! No alumni within your department."<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  279:
        -:  280:			}
        -:  281:			else
        -:  282:			{
        1:  283:				cout<<endl<<"Enter alumni reg_no from the list"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  284:				cin>>alm_reg;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  285:				int check1=0;
        3:  286:				for(auto iter = alm.begin(); iter!=alm.end();iter++)
call    0 returned 1
call    1 returned 3
call    2 returned 3
branch  3 taken 2 (fallthrough)
branch  4 taken 1
call    5 returned 2
        -:  287:				{
        2:  288:					if(alm_reg==iter->ret_reg_no() )
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
call    5 returned 2
branch  6 taken 1 (fallthrough)
branch  7 taken 1
        -:  289:					{
        1:  290:						check1=1;
        -:  291:					}
        -:  292:				}
        1:  293:				if(check1==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  294:				{
    #####:  295:					cout<<endl<<"It seems you entered the wrong value!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  296:					return 0;
        -:  297:
        -:  298:				}
        -:  299:				else
        -:  300:				{
        1:  301:					cout<<endl<<"********Connect Successfully*****"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  302:					cout<<endl<<"Please contact admin for this connect report"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        -:  303:				}
        -:  304:			}
        -:  305:		}
        -:  306:
        1:  307:		connect1 = make_tuple(alm_reg,reg_no,dept);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 returned 1
        1:  308:		all_connect.push_front(connect1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  309:	}
    =====:  310:	catch(...)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
        -:  311:	{
    =====:  312:		cout<<"No alumni in the university exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  313:	}
        -:  314:
        1:  315:	return 0;
        -:  316:}
        -:  317:
        -:  318:
        -:  319:/*********************************************************
        -:  320: * FUNCTION NAME  : Edit_Info 
        -:  321: *
        -:  322: * DESCRIPTION   : student will Edit the information like email and telephone umber. 
        -:  323: *
        -:  324: *
        -:  325: * RETURNS        :---------
        -:  326: *
        -:  327: *
        -:  328: **********************************************************/
        -:  329:
        -:  330:
function _ZN7student9Edit_InfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 28%
        1:  331:int student::Edit_Info(string reg_num)
        -:  332:{
        -:  333:	try
        -:  334:	{
        1:  335:		if(stl.empty())
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  336:		{
    #####:  337:			throw stl.empty();
call    0 never executed
call    1 never executed
call    2 never executed
        -:  338:		}
        -:  339:		else
        -:  340:		{
        1:  341:			int flag=0;
        1:  342:			flag =0;
        2:  343:			for(list<student>::iterator it=stl.begin();it!=stl.end();it++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  344:			{
        1:  345:				if(it->student_register_number==reg_num)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:  346:				{
        1:  347:					flag=1;
        1:  348:					cout<<"------------------------------------------------------------------------"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  349:					cout<<endl<<"                         Previous Details                                "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  350:					cout<<endl<<"Telephone number :  "<<it->student_tel_no<<endl<<"Email Address :  "<<it->student_email_id<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        2:  351:					string choice;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  352:					string option;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  353:					cout<<endl<<"Enter yes to continue editing - "<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  354:					cin>>option;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  355:					if(option=="yes")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  356:					{
        -:  357:
        -:  358:						while(1)
        -:  359:						{
    #####:  360:							cout<<endl<<"Enter yes to edit telephone number"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  361:							cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  362:							if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  363:							{
    #####:  364:								cout<<endl<<"Enter Updated Telephone number: "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  365:								getline(cin>>ws,it->student_tel_no);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -:  366:
    #####:  367:								if(v1.check_number(it->student_tel_no)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  368:								{
    #####:  369:									if(v1.check_length(it->student_tel_no,size)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  370:									{
    #####:  371:										break;
        -:  372:									}
        -:  373:								}
        -:  374:								else
    #####:  375:									continue;
        -:  376:
        -:  377:							}
    #####:  378:							break;
        -:  379:						}
        -:  380:						while(1)
        -:  381:						{
    #####:  382:							cout<<endl<<"Enter yes to edit Email Address"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  383:							cin>>choice;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  384:							if(choice=="yes")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  385:							{
    #####:  386:								cout<<endl<<"Enter Updated Email address: "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  387:								cin.ignore();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  388:								getline(cin>>ws,it->student_email_id);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  389:								cin.clear();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  390:								if(v1.Email_check(it->student_email_id))
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
        -:  391:								{
        -:  392:
    #####:  393:									break;
        -:  394:								}
        -:  395:								else
        -:  396:								{
    #####:  397:									cout<<endl<<endl<<"Invalid Email Address!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
    #####:  398:									continue;
        -:  399:								}
        -:  400:
        -:  401:							}
    #####:  402:							break;			
        -:  403:						}
        -:  404:						while(1)
        -:  405:						{
    #####:  406:							cout<<endl<<"Are you placed yes/no: "<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  407:							cin>>it->placed;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  408:							if(it->placed=="yes" ||it->placed =="no")
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
        -:  409:							{
    #####:  410:								break;
        -:  411:							}
        -:  412:						}	
        -:  413:					}
        -:  414:
        -:  415:
        -:  416:				}
        -:  417:			}
        1:  418:			if(flag==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  419:			{
    #####:  420:				cout<<endl<<"Student Registration Number is not Exists."<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  421:			}
        -:  422:		}
        -:  423:	}
    =====:  424:	catch(...)
call    0 never executed
call    1 never executed
call    2 never executed
        -:  425:	{
    =====:  426:		cout<<"No record to edit"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  427:	}
        -:  428:
        1:  429:	return 0;
        -:  430:}
        -:  431:
        -:  432:/*********************************************************
        -:  433: * FUNCTION NAME  : view_profile 
        -:  434: *
        -:  435: * DESCRIPTION   : the student can see his/her profile  
        -:  436: *
        -:  437: * Returns      :----------
        -:  438: *
        -:  439: **********************************************************/
        -:  440:
        -:  441:
        -:  442:
        -:  443:
function _ZN7student12view_profileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 100%
        2:  444:int student :: view_profile(string reg_num)
        -:  445:{
        -:  446:
        4:  447:	for(list<student>::iterator it=stl.begin();it!=stl.end();it++)
call    0 returned 2
call    1 returned 4
call    2 returned 4
branch  3 taken 2 (fallthrough)
branch  4 taken 2
call    5 returned 2
        -:  448:	{
        2:  449:		if(it->student_register_number==reg_num)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0
        -:  450:		{
        2:  451:			cout<<endl<<endl<<".........Student Details........"<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:  452:			cout<<endl<<"Register number    : " <<it->student_register_number<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  453:			cout<<endl<<"Full Name          : " <<it->student_name<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  454:			cout<<endl<<"Telephone number   : " <<it->student_tel_no<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  455:			cout<<endl<<"Email id           : " <<it->student_email_id<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  456:			cout<<endl<<"Department         : " <<it->student_department<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  457:			cout<<endl<<"Placed             : "<<it->placed<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  458:			cout<<endl;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:  459:		}
        -:  460:	}
        2:  461:	return 0;
        -:  462:}
        -:  463:
        -:  464:
        -:  465:/*********************************************************
        -:  466: * FUNCTION NAME  : View_Alumni_Details
        -:  467: *
        -:  468: * DESCRIPTION    : student can view the details of Alumni.
        -:  469: *
        -:  470: * RETURNS        :-------
        -:  471: *
        -:  472: ****************************************************/
        -:  473:
        -:  474:
        -:  475:
        -:  476:
function _ZN7student19View_Alumni_DetailsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 66%
        1:  477:int student :: View_Alumni_Details(string reg_no)
        -:  478:{
        -:  479:
        1:  480:	string dept;
call    0 returned 1
call    1 never executed
        1:  481:	cout<<endl<<"Enter your department"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  482:	cin>>dept;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  483:	if(v1.check_department(dept)==1)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        -:  484:	{
        1:  485:		int flag = 0;
        -:  486:		try
        -:  487:		{
        2:  488:			for(auto iter = stl.begin(); iter!=stl.end();iter++)
call    0 returned 1
call    1 returned 2
call    2 returned 2
branch  3 taken 1 (fallthrough)
branch  4 taken 1
call    5 returned 1
        -:  489:			{
       1*:  490:				if(iter->student_register_number==reg_no && iter->student_department == dept)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        -:  491:				{
        -:  492:
        3:  493:					for(auto iter = alm.begin(); iter!=alm.end();iter++)
call    0 returned 1
call    1 returned 3
call    2 returned 3
branch  3 taken 2 (fallthrough)
branch  4 taken 1
call    5 returned 2
        -:  494:					{
        2:  495:						if(iter->ret_dept_no()==dept)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
call    5 returned 2
branch  6 taken 1 (fallthrough)
branch  7 taken 1
        -:  496:						{
        1:  497:							Alumni::View_Profile(iter->ret_reg_no());
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
call    8 never executed
        1:  498:							flag = 1;
        -:  499:
        -:  500:						}
        -:  501:					}
        -:  502:				}
        -:  503:			}
        1:  504:			if(flag==0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  505:				throw flag;
call    0 never executed
call    1 never executed
        -:  506:		}
    =====:  507:		catch(int flag)
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:  508:		{
    =====:  509:			cout<<endl<<"No Profile to show ---"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  510:		}
        -:  511:	}
        -:  512:	else
        -:  513:	{
    #####:  514:		cout<<"Enter correct value!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  515:	}
        2:  516:	return 0;
call    0 returned 1
        -:  517:}
        -:  518:
        -:  519:/*********************************************************
        -:  520: * FUNCTION NAME  : Job_Posts 
        -:  521: *
        -:  522: * DESCRIPTION   : the student will see the Job post/materials/Technical stuffs  posted by the Alumni.
        -:  523: *
        -:  524: *
        -:  525: ****************************************************/
        -:  526:
        -:  527:
        -:  528:
function _ZN7student9Job_PostsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 74%
        1:  529:void student :: Job_Posts(string reg_no)
        -:  530:{
        2:  531:	string dept;
call    0 returned 1
call    1 returned 1
call    2 never executed
        2:  532:	string check;
call    0 returned 1
call    1 returned 1
call    2 never executed
        1:  533:	cout<<endl<<"Enter the department name to see posts by your alumni"<<endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  534:	cin>>dept;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  535:	if(v1.check_department(dept)==1)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        -:  536:	{
        3:  537:		for(auto iter = alm.begin(); iter!=alm.end();iter++)
call    0 returned 1
call    1 returned 3
call    2 returned 3
branch  3 taken 2 (fallthrough)
branch  4 taken 1
call    5 returned 2
        -:  538:		{
        2:  539:			if(iter->ret_dept_no()==dept)
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 2
call    5 returned 2
branch  6 taken 1 (fallthrough)
branch  7 taken 1
        -:  540:			{
        1:  541:				check = iter->ret_reg_no();
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
call    5 returned 1
        1:  542:				Alumni::view_posts(check);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
        -:  543:
        -:  544:			}
        -:  545:		}
        -:  546:	}
        -:  547:	else
        -:  548:	{
    #####:  549:		cout<<endl<<"Enter correct department"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        -:  550:	}
        1:  551:}
